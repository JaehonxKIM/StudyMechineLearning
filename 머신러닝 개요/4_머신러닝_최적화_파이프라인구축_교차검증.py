# -*- coding: utf-8 -*-
"""4. 머신러닝_최적화_파이프라인구축_교차검증.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_pYxY-WOvnN0N7LmlC0D14MaThHJKBsx

# 머신러닝 절차
- 알고리즘 선정
- 데이터 준비(훈련용, 테스트용)
- 학습
- 예측
- 성능평가(분류, 회귀)
- **최적화**
- 덤프

## 최적화
- 목표
  - 분류에서는 정확도(특정 지표)를 목표치까지 올리는데 있다
  - 회귀에서는 손실값을 목표치까지 내리는데 있다
  - 강화학습은 전략이 다름

- 방법
  - **데이터** 양이 부족하면 추가확보, 생성, 획득, 구매, ...
  - **하이퍼 파라미터 튜닝**
    - 개별 알고리즘의 파라미터 값의 최적 조합을 찾는다
  - **파이프라인** 구축
    - 데이터 전처리부터 학습까지 파이프라인 구축하여 전개되게 구성
  - 기타
    - n개 알고리즘 조합으로 구성
    - 앙상블 기법과 유사함

- 데이터 검증 폴드 (fold) 이해 및 구성

# 샘플 프로젝트 준비

- 정확도가 별로인 훈련과정 준비
- 프로젝트 초기의 프로토타입

## 알고리즘 선정
"""

from sklearn.svm import SVC

clf = SVC()

"""## 데이터 준비(훈련,테스트용)"""

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split

# 데이터 확득
cancer = load_breast_cancer()
print(cancer.DESCR)

# 독립변수, 종속변수의 shape
cancer.data.shape, cancer.target.shape, cancer.target_names

# 정답은 2종류, 이진 데이터, 바이너리 데이터 형태, 학습효율이 좋은 구조
cancer.target[:100]

# 훈련용, 테스트용 데이터를 75:25 비율로 나눠서 X_train, y_train.. 형태로 생성하시오
# 난수의 씨드는 0으로 고정
X = cancer.data
y = cancer.target

X_train, X_test, y_train, y_test = train_test_split( X, y,
                                                    train_size=0.75,random_state=0 )
X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""## 학습"""

clf.fit(X_train, y_train)

"""## 예측"""

y_pred = clf.predict(X_test)

"""## 성능 평가"""

from sklearn.metrics import accuracy_score

accuracy_score(y_test, y_pred)

# 예측을 수행하고 바로 점수를 낸다
clf.score(X_test, y_test)

"""## 최적화(생략)

## 덤프(생략)

# 하이퍼파라미터 튜닝

# 파이프라인 구축
"""

